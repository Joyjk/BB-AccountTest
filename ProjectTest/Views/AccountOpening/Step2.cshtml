@model AccountOpeningModel

@{
    ViewData["Title"] = "NID Verification";
}

<partial name="_Timeline" model="Model" />

<div class="card" >
    <div class="card-header">
        <h3>Capture/Upload Image of Original NID or Smart Card</h3>
    </div>
    <div class="card-body">
        <div class="container bg-blue p-4 rounded shadow" style="background-color:aliceblue!important">
            <h4 class="text-center mb-4"></h4>

            <form id="identityForm" asp-action="Step1_IdentityVerification" method="post" enctype="multipart/form-data">
                <div class="row text-center">
                    <!-- Front Side -->
                    <div class="col-md-6 mb-3">
                        <label class="fw-bold">NID Front Side</label><br />
                        <div class="d-flex justify-content-center gap-2 mb-2">
                            <button type="button" class="btn btn-outline-primary" onclick="document.getElementById('nidFrontInput').click()">
                                📁 Browse
                            </button>
                            <button type="button" class="btn btn-outline-warning" onclick="startCamera('front')">📷 Capture</button>
                        </div>
                        <input type="file" name="nidFront" class="form-control mb-2 d-none" accept="image/*" id="nidFrontInput" />
                        <video id="frontCamera" width="100%" height="200" autoplay playsinline style="display:none;"></video>
                        <canvas id="frontCanvas" style="display:none; border: 1px solid #ccc; height:200px; width:100%;"></canvas>
                        <img id="frontPreview" src="#" alt="Front Preview" style="display:none; max-height:200px; width:auto;" class="img-fluid mb-2" />
                        <input type="hidden" id="frontCapture" name="frontCapture" />
                        <div id="frontButtons" class="mt-2" style="display:none;">
                            <button type="button" class="btn btn-success btn-sm" onclick="acceptImage('front')">Accept</button>
                            <button type="button" class="btn btn-danger btn-sm" onclick="retryCapture('front')">Retry</button>
                        </div>
                    </div>

                    <!-- Back Side -->
                    <div class="col-md-6 mb-3">
                        <label class="fw-bold">NID Back Side</label><br />
                        <div class="d-flex justify-content-center gap-2 mb-2">
                            <button type="button" class="btn btn-outline-primary" onclick="document.getElementById('nidBackInput').click()">
                                📁 Browse
                            </button>
                            <button type="button" class="btn btn-outline-warning" onclick="startCamera('back')">📷 Capture</button>
                        </div>
                        <input type="file" name="nidBack" class="form-control mb-2 d-none" accept="image/*" id="nidBackInput" />
                        <video id="backCamera" width="100%" height="200" autoplay playsinline style="display:none;"></video>
                        <canvas id="backCanvas" style="display:none; border: 1px solid #ccc;height:200px; width:100%;"></canvas>
                        <img id="backPreview" src="#" alt="Back Preview" style="display:none; max-height:200px; width:auto;" class="img-fluid mb-2" />
                        <input type="hidden" id="backCapture" name="backCapture" />
                        <div id="backButtons" class="mt-2" style="display:none;">
                            <button type="button" class="btn btn-success btn-sm" onclick="acceptImage('back')">Accept</button>
                            <button type="button" class="btn btn-danger btn-sm" onclick="retryCapture('back')">Retry</button>
                        </div>
                    </div>
                </div>

                <div class="text-center">
                    <button type="submit" class="btn btn-primary px-5">UPLOAD</button>
                </div>
            </form>
        </div>


        <br />
        <br />

        <form asp-action="NextStep" method="post">
            <input type="hidden" asp-for="CurrentStep" value="2" />

            @* <div class="form-group">
                <label>Select Account Type:</label>
                <select asp-for="SelectedProduct" class="form-control" required>
                    <option value="">-- Select Product --</option>
                    <option value="Savings">Savings Account</option>
                    <option value="Current">Current Account</option>
                    <option value="FixedDeposit">Fixed Deposit</option>
                </select>
                <span asp-validation-for="SelectedProduct" class="text-danger"></span>
            </div> *@

            <div class="form-group text-center">
                <button type="submit" class="btn btn-primary">Next</button>
            </div>
        </form>
    </div>
</div>



@{
    ViewData["Title"] = "Identity Verification";
}




@section Scripts {
    <script>
        let currentStream = null;
        let currentSide = null;

        // Initialize file input change handlers when page loads
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('nidFrontInput').addEventListener('change', function(e) {
                handleFileSelect(e, 'front');
            });

            document.getElementById('nidBackInput').addEventListener('change', function(e) {
                handleFileSelect(e, 'back');
            });
        });

        function handleFileSelect(event, side) {
            const file = event.target.files[0];
            if (!file) return;

            const preview = document.getElementById(`${side}Preview`);
            const canvas = document.getElementById(`${side}Canvas`);
            const video = document.getElementById(`${side}Camera`);
            const buttons = document.getElementById(`${side}Buttons`);

            // Hide other elements
            canvas.style.display = 'none';
            video.style.display = 'none';
            buttons.style.display = 'none';

            // Show preview
            const reader = new FileReader();
            reader.onload = function(e) {
                preview.src = e.target.result;
                preview.style.display = 'block';
            };
            reader.readAsDataURL(file);
        }

        function startCamera(side) {
            currentSide = side;
            const video = document.getElementById(`${side}Camera`);
            const canvas = document.getElementById(`${side}Canvas`);
            const preview = document.getElementById(`${side}Preview`);
            const buttons = document.getElementById(`${side}Buttons`);

            // Hide other elements
            preview.style.display = 'none';
            canvas.style.display = 'none';
            buttons.style.display = 'none';

            if (currentStream) {
                currentStream.getTracks().forEach(track => track.stop());
            }

            navigator.mediaDevices.getUserMedia({ video: true })
                .then(stream => {
                    currentStream = stream;
                    video.srcObject = stream;
                    video.style.display = 'block';

                    // Change capture button to "Capture Now"
                    const captureBtns = document.querySelectorAll(`button[onclick="startCamera('${side}')"]`);
                    captureBtns.forEach(btn => {
                        btn.textContent = '📸 Capture Now';
                        btn.onclick = function() {
                            captureImage(video, canvas, side);
                            video.style.display = 'none';
                            stream.getTracks().forEach(track => track.stop());
                        };
                    });
                })
                .catch(error => {
                    alert("Camera not available or permission denied.");
                    console.error(error);
                });
        }

        function captureImage(video, canvas, side) {
            const context = canvas.getContext('2d');
            const preview = document.getElementById(`${side}Preview`);
            const buttons = document.getElementById(`${side}Buttons`);

            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            context.drawImage(video, 0, 0);

            // Show canvas and buttons
            canvas.style.display = 'block';
            buttons.style.display = 'block';

            // Reset capture buttons
            const captureBtns = document.querySelectorAll(`button[onclick="startCamera('${side}')"]`);
            captureBtns.forEach(btn => {
                btn.textContent = '📷 Capture';
                btn.onclick = function() { startCamera(side); };
            });
        }

        function acceptImage(side) {
            const canvas = document.getElementById(`${side}Canvas`);
            const preview = document.getElementById(`${side}Preview`);
            const buttons = document.getElementById(`${side}Buttons`);
            const fileInput = document.getElementById(`nid${side.charAt(0).toUpperCase() + side.slice(1)}Input`);

            // Convert canvas to blob and create file
            canvas.toBlob(blob => {
                const file = new File([blob], `${side}Capture.jpg`, { type: 'image/jpeg' });
                const dt = new DataTransfer();
                dt.items.add(file);
                fileInput.files = dt.files;

                // Show preview
                preview.src = canvas.toDataURL();
                preview.style.display = 'block';
                canvas.style.display = 'none';
                buttons.style.display = 'none';
            }, 'image/jpeg');
        }

        function retryCapture(side) {
            const canvas = document.getElementById(`${side}Canvas`);
            const buttons = document.getElementById(`${side}Buttons`);
            const preview = document.getElementById(`${side}Preview`);

            canvas.style.display = 'none';
            buttons.style.display = 'none';
            preview.style.display = 'none';
            startCamera(side);
        }
    </script>
}
